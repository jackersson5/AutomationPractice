// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AutomationPractice.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Cart", Description="  In order to use a cart\r\n  As an application user\r\n  I want to be able to add an" +
        "d remove products from it", SourceFile="Features\\Cart.feature", SourceLine=0)]
    public partial class CartFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Cart.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Cart", "  In order to use a cart\r\n  As an application user\r\n  I want to be able to add an" +
                    "d remove products from it", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
testRunner.Given("I am on Product page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Adding a product to the cart", SourceLine=8)]
        public virtual void AddingAProductToTheCart()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adding a product to the cart", ((string[])(null)));
#line 9
    this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 10
      testRunner.When("I add product to cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
      testRunner.Then("The Product is added to cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Removing a product from the cart in the cart view", SourceLine=12)]
        public virtual void RemovingAProductFromTheCartInTheCartView()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Removing a product from the cart in the cart view", ((string[])(null)));
#line 13
    this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 14
      testRunner.Given("The product is on the cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
      testRunner.When("I remove product on the cart view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
      testRunner.Then("The product is removed from the cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Entering an empty cart", SourceLine=17)]
        public virtual void EnteringAnEmptyCart()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Entering an empty cart", ((string[])(null)));
#line 18
   this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 19
      testRunner.When("I enter the cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
      testRunner.Then("Information about empty cart appears", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Continue shopping after adding the product to the basket", SourceLine=21)]
        public virtual void ContinueShoppingAfterAddingTheProductToTheBasket()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Continue shopping after adding the product to the basket", ((string[])(null)));
#line 22
   this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 23
      testRunner.Given("I add product to cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
      testRunner.When("I press Continue shopping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
      testRunner.Then("I am redirected to Product page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Proceed to checkout after adding the product to the basket", SourceLine=26)]
        public virtual void ProceedToCheckoutAfterAddingTheProductToTheBasket()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Proceed to checkout after adding the product to the basket", ((string[])(null)));
#line 27
   this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 28
      testRunner.Given("I add product to cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
      testRunner.When("I press Proceed to checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
   testRunner.Then("I am redirected to shopping cart summary", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
